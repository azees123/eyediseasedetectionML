name: Build Kivy APK

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      ANDROID_SDK_ROOT: ${{ github.workspace }}/android-sdk

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Cache Android SDK and NDK
        uses: actions/cache@v3
        with:
          path: |
            ${{ github.workspace }}/android-sdk
            ${{ github.workspace }}/.buildozer
          key: ${{ runner.os }}-android-sdk-ndk-${{ hashFiles('**/buildozer.spec') }}
          restore-keys: |
            ${{ runner.os }}-android-sdk-ndk-

      - name: Install Android SDK and NDK
        run: |
          mkdir -p $ANDROID_SDK_ROOT/cmdline-tools
          cd $ANDROID_SDK_ROOT/cmdline-tools
          wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O tools.zip
          unzip tools.zip -d temp
          mv temp/cmdline-tools $ANDROID_SDK_ROOT/cmdline-tools/latest
          export PATH=$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$PATH
          yes | sdkmanager --sdk_root=$ANDROID_SDK_ROOT --licenses
          sdkmanager --sdk_root=$ANDROID_SDK_ROOT \
            "platform-tools" \
            "platforms;android-31" \
            "build-tools;33.0.2" \
            "ndk;25.2.9519653"

      - name: Set SDK tools in PATH
        run: |
          echo "$ANDROID_SDK_ROOT/platform-tools" >> $GITHUB_PATH
          echo "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "$ANDROID_SDK_ROOT/build-tools/33.0.2" >> $GITHUB_PATH
          echo "$ANDROID_SDK_ROOT/ndk/25.2.9519653" >> $GITHUB_PATH

      - name: Install Buildozer and dependencies
        run: |
          pip install --upgrade pip
          pip install buildozer cython python-for-android

          export ANDROIDNDK=$ANDROID_SDK_ROOT/ndk/25.2.9519653
          export ANDROID_NDK=$ANDROID_SDK_ROOT/ndk/25.2.9519653

          # Make sure buildozer.spec uses the correct NDK
          sed -i 's/^#* *android.ndk *=.*/android.ndk = 25.2.9519653/' buildozer.spec || true

          # Include tflite file
          sed -i 's|^source.include_exts *=.*|source.include_exts = py,png,jpg,kv,tflite|' buildozer.spec || true

      - name: Output environment variables
        run: |
          echo "ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT"
          echo "ANDROID_NDK=$ANDROID_NDK"
          echo "PATH=$PATH"

      - name: Verify Android SDK/NDK installation
        run: |
          sdkmanager --list
          ndk-build --version
          java -version
          python --version

      - name: Build APK
        run: |
          buildozer android clean || true
          buildozer android debug --log_level 2

      - name: Check if APK exists
        run: |
          if [ -f bin/*.apk ]; then echo "APK found"; else echo "APK not found"; exit 1; fi

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: EyeDiseaseDetector-APK
          path: bin/*.apk
