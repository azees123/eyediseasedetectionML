name: Build Kivy APK

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      ANDROID_SDK_ROOT: ${{ github.workspace }}/android-sdk
      ANDROID_NDK_HOME: ${{ github.workspace }}/android-sdk/ndk/25.2.9519653
      ANDROID_NDK: ${{ github.workspace }}/android-sdk/ndk/25.2.9519653

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install Android SDK and NDK
        run: |
          mkdir -p $ANDROID_SDK_ROOT/cmdline-tools
          cd $ANDROID_SDK_ROOT/cmdline-tools
          wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O tools.zip
          unzip tools.zip -d temp
          mv temp/cmdline-tools $ANDROID_SDK_ROOT/cmdline-tools/latest
          export PATH=$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$PATH
          yes | sdkmanager --sdk_root=$ANDROID_SDK_ROOT --licenses
          sdkmanager --sdk_root=$ANDROID_SDK_ROOT \
            "platform-tools" \
            "platforms;android-31" \
            "build-tools;33.0.2" \
            "ndk;25.2.9519653" \
            "cmake;3.22.1"

      - name: Set SDK tools in PATH
        run: |
          echo "$ANDROID_SDK_ROOT/platform-tools" >> $GITHUB_PATH
          echo "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "$ANDROID_SDK_ROOT/build-tools/33.0.2" >> $GITHUB_PATH
          echo "$ANDROID_SDK_ROOT/ndk/25.2.9519653" >> $GITHUB_PATH

      - name: Convert model to TensorFlow Lite
        run: |
          python3 -m pip install tensorflow
          python3 -c "
          import tensorflow as tf
          model = tf.keras.models.load_model('eye_disease_model.h5')
          converter = tf.lite.TFLiteConverter.from_keras_model(model)
          tflite_model = converter.convert()
          open('eye_disease_model.tflite', 'wb').write(tflite_model)
          "

      - name: Install Buildozer and dependencies
        run: |
          python3 -m venv venv
          source venv/bin/activate
          pip install --upgrade pip wheel setuptools
          pip install buildozer cython python-for-android

      - name: Build APK
        run: |
          source venv/bin/activate
          export ANDROID_NDK_HOME=$ANDROID_SDK_ROOT/ndk/25.2.9519653
          export ANDROID_NDK=$ANDROID_SDK_ROOT/ndk/25.2.9519653
          buildozer android clean
          buildozer -v android debug

      - name: Upload APK as artifact
        uses: actions/upload-artifact@v4
        with:
          name: EyeDiseaseDetector-APK
          path: bin/*.apk
